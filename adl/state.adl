module state {

import sys.types.Map;
import types.EndPointLabel;
import types.DeployLabel;
import types.StringKeyMap;

// The system state stored to manage multiple deploys with
// a proxy for live switching between them and, where specified, SSL
// termination.

struct State {
  // Live deployments
  StringKeyMap<DeployLabel, Deploy> deploys;

  // Connections between the configured endpoints and deployments
  StringKeyMap<EndPointLabel, DeployLabel> connections;
};


// The (remotely) reported state of a slave
struct SlaveState {
  // The result of the last state change
  SlaveStatus status;
  
  // The IP of the slave on which camus2 is running
  String slaveIP;

  //Host name of the slave
  String slaveHostName;

  // The state of the slave after the last succesful state change
  State state;
};

union SlaveStatus {
  Void ok;
  String error;
};

// A running deployed system
struct Deploy {
  DeployLabel label;
  String release;
  Word32 port;
};

};
